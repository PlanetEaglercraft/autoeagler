name: Nightly Build and Deploy

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *' # Every night at 3 AM UTC
  workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflow repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            workspace/gradle
            workspace/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('workspace/**/*.gradle*', 'workspace/gradle-wrapper.properties', 'workspace/gradle/**', 'workspace/gradle.properties') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x workspace/gradlew


      - name: Add timestamp to build files
        working-directory: workspace
        run: |
          TS=$(date +%Y%m%d-%H%M%S)
          for f in target_teavm_javascript/javascript/*.html; do [ -e "$f" ] && mv "$f" "${f%.html}_$TS.html"; done
          for f in target_teavm_wasm_gc/javascript_dist/*.html; do [ -e "$f" ] && mv "$f" "${f%.html}_$TS.html"; done

      - name: Build all (makeMainOfflineDownload & makeMainWasmClientBundle)
        working-directory: workspace
        run: ./gradlew makeMainOfflineDownload makeMainWasmClientBundle --parallel

      - name: Create or Update Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly Build
          files: |
            workspace/target_teavm_javascript/javascript/*.html
            workspace/target_teavm_wasm_gc/javascript_dist/*.html
          prerelease: true
          draft: false
          overwrite: true
          remove_assets: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare GitHub Pages content
        run: |
          mkdir -p gh-pages-publish/js gh-pages-publish/wasm
          rm -rf gh-pages-publish/js/* gh-pages-publish/wasm/*
          cp -r workspace/target_teavm_javascript/javascript/* gh-pages-publish/js/
          cp -r workspace/target_teavm_wasm_gc/javascript_dist/* gh-pages-publish/wasm/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages-publish